apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def getVersionCode = { ->
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', 'HEAD', '--first-parent', '--count'
            standardOutput = code
        }
        return code.toString().trim().toInteger()
    }
    catch (error) {
        logger.error("Error getting version code: %s", error)
        return 0;
    }
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--dirty'
            standardOutput = stdout
        }
        return stdout.toString().trim().substring(1)
    }
    catch (error) {
        logger.error("Error getting version name: %s", error)
        return null;
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.nian.netgenius"
        minSdkVersion 21
        targetSdkVersion 21
        versionName getVersionName()
        versionCode getVersionCode()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        abortOnError false
    }
}
repositories {
    mavenCentral()
    jcenter()
}
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'com.android.support:support-v4:23.3.0'
    compile 'org.pcap4j:pcap4j-core:1.6.4'
    compile 'org.pcap4j:pcap4j-packetfactory-propertiesbased:1.6.4'
    compile 'org.slf4j:slf4j-android:1.7.21'
    compile 'dnsjava:dnsjava:2.1.7'
    testCompile 'junit:junit:4.12'
}
